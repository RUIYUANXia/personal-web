{"version":3,"sources":["webpack:///./src/components/icons/Github.tsx","webpack:///./src/components/icons/Linkedin.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/BlogCard.tsx","webpack:///./src/components/BlogList.tsx"],"names":["Github","_ref","_ref$iconFill","iconFill","colors","textTitleLight","React","createElement","xmlns","width","height","x","y","viewBox","d","fill","Linkedin","Header","styled","div","_templateObject","_taggedTemplateLiteralLoose","media","medium","_templateObject2","StyledPageWrapper","PageWrapper","_templateObject3","HeaderWrapper","_templateObject4","_templateObject5","HeaderImage","Img","_templateObject6","_templateObject7","props","theme","color","backgroundLight","backgroundDark","HeadshotWrapper","_templateObject8","_templateObject9","Headshot","_templateObject10","_templateObject11","Intro","_templateObject12","_templateObject13","IntroDescription","p","_templateObject14","textSize","largeThin","textColor","body","_templateObject15","SocialMedia","ul","_templateObject16","_templateObject17","SocialMediaItem","li","_templateObject18","Section","_templateObject19","RecentPosts","_templateObject20","Projects","_templateObject21","ProjectWrapper","_templateObject22","LinkedProject","Link","_templateObject23","transitionDuration","slow","Project","_templateObject24","ProjectTitle","h3","_templateObject25","title","large","ProjectImage","_templateObject26","ProjectDescription","_templateObject27","normal","StyledTitle","Title","_templateObject28","_templateObject29","SocialMediaGroup","useTheme","textTitleDark","items","link","icon","map","item","key","to","WrappedProject","projectPageLink","children","Home","_ref2","_ref2$data","data","homeHeader","homeHeadshot","posts","edges","projects","Layout","fluid","childImageSharp","alt","style","position","Fade","Divider","top","as","_ref3","project","node","fields","id","frontmatter","detailsPageLink","imageColor","description","bottom","Button","BlogList","Post","section","withConfig","displayName","componentId","PostLink","backgroundSecondaryLight","backgroundSecondaryDark","PostDescription","PostTitle","MetaInfo","small","PostDate","time","MetaInfoSeparator","span","TimeToRead","Clock","PostExcerpt","PostImage","BlogCard","post","slug","dateTime","dateTimeString","formattedDate","timeToRead","banner","BlogListComponent","undefined"],"mappings":"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","file":"component---src-pages-index-tsx-425c60d2bd3b4c312390.js","sourcesContent":["import React from 'react';\n\nimport { colors } from '../../styles/common';\n\ntype GithubProps = {\n    iconFill?: string;\n};\n\nconst Github = ({ iconFill = colors.textTitleLight }: GithubProps) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\"\n            height=\"50\"\n            x=\"0\"\n            y=\"0\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                d=\"M17.791 46.836A1.999 1.999 0 0019 45v-5.4c0-.197.016-.402.041-.61A.611.611 0 0119 39h-3.6c-1.5 0-2.8-.6-3.4-1.8-.7-1.3-1-3.5-2.8-4.7-.3-.2-.1-.5.5-.5.6.1 1.9.9 2.7 2 .9 1.1 1.8 2 3.4 2 2.487 0 3.82-.125 4.622-.555C21.356 34.056 22.649 33 24 33v-.025c-5.668-.182-9.289-2.066-10.975-4.975-3.665.042-6.856.405-8.677.707a21.537 21.537 0 01-.151-.987c1.797-.296 4.843-.647 8.345-.714a8.162 8.162 0 01-.291-.849c-3.511-.178-6.541-.039-8.187.097-.02-.332-.047-.663-.051-.999 1.649-.135 4.597-.27 8.018-.111a9.832 9.832 0 01-.13-1.543c0-1.7.6-3.5 1.7-5-.5-1.7-1.2-5.3.2-6.6 2.7 0 4.6 1.3 5.5 2.1C21 13.4 22.9 13 25 13s4 .4 5.6 1.1c.9-.8 2.8-2.1 5.5-2.1 1.5 1.4.7 5 .2 6.6 1.1 1.5 1.7 3.2 1.6 5 0 .484-.045.951-.11 1.409 3.499-.172 6.527-.034 8.204.102-.002.337-.033.666-.051.999-1.671-.138-4.775-.28-8.359-.089a8.272 8.272 0 01-.325.98c3.546.046 6.665.389 8.548.689-.043.332-.093.661-.151.987-1.912-.306-5.171-.664-8.879-.682-1.665 2.878-5.22 4.755-10.777 4.974V33c2.6 0 5 3.9 5 6.6V45c0 .823.498 1.53 1.209 1.836C41.37 43.804 48 35.164 48 25 48 12.318 37.683 2 25 2S2 12.318 2 25c0 10.164 6.63 18.804 15.791 21.836z\"\n                fill={iconFill}\n            ></path>\n        </svg>\n    );\n};\n\nexport default Github;\n","import React from 'react';\n\nimport { colors } from '../../styles/common';\n\ntype LinkedinProps = {\n    iconFill?: string;\n};\n\nconst Linkedin = ({ iconFill = colors.textTitleLight }: LinkedinProps) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\"\n            height=\"50\"\n            x=\"0\"\n            y=\"0\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                d=\"M8 3.01c-3.47 0-5.99 2.08-5.99 4.94 0 2.87 2.58 5.04 5.99 5.04 3.47 0 5.99-2.12 5.99-5.1-.16-2.87-2.63-4.88-5.99-4.88zM3 15c-.55 0-1 .45-1 1v29c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V16c0-.55-.45-1-1-1H3zm15 0c-.55 0-1 .45-1 1v29c0 .55.45 1 1 1h9a1 1 0 001-1V29.5c0-2.37 1.82-4.3 4.14-4.48.12-.02.24-.02.36-.02s.24 0 .36.02c2.32.18 4.14 2.11 4.14 4.48V45a1 1 0 001 1h9c.55 0 1-.45 1-1V28c0-6.47-3.47-13-11.21-13-3.52 0-6.18 1.36-7.79 2.49V16c0-.55-.45-1-1-1H18z\"\n                fill={iconFill}\n            ></path>\n        </svg>\n    );\n};\n\nexport default Linkedin;\n","/* eslint-disable max-lines */\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\n\nimport BlogList from '../components/BlogList';\nimport { Button, Divider, PageWrapper } from '../components/Common';\nimport Github from '../components/icons/Github';\nimport Linkedin from '../components/icons/Linkedin';\n// import Wechat from '../components/icons/Wechat';\nimport Layout from '../components/Layout';\nimport Link from '../components/Link';\nimport { Title } from '../components/Typography';\nimport styled from '../lib/styled-components';\nimport {\n    colors,\n    media,\n    textColor,\n    textSize,\n    transitionDuration\n} from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { FluidImage } from '../types/Image';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\n// eslint-disable-next-line no-unused-vars\nimport { Project as ProjectType } from '../types/Project';\nimport { useTheme } from '../utils/context';\n\nconst Header = styled.div`\n    position: relative;\n    height: 560px;\n    margin-top: -60px; // height of the menu\n    display: flex;\n    padding: 0 20px;\n\n    ${media.medium`\n        height: unset;\n        margin-top: -140px; // height of the menu\n        padding-top: calc(140px + 20px);\n        padding-bottom: 80px;\n    `};\n`;\n\nconst StyledPageWrapper = styled(PageWrapper)`\n    padding: 40px 0;\n`;\n\nconst HeaderWrapper = styled(PageWrapper)`\n    display: flex;\n    height: 100%;\n\n    ${media.medium`\n        flex-direction: column;\n    `};\n`;\n\nconst HeaderImage = styled(Img)`\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 560px;\n\n    ${media.medium`\n        height: 100%;\n    `};\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-color: ${props =>\n            props.theme.color === 'light'\n                ? colors.backgroundLight\n                : colors.backgroundDark};\n        opacity: 1;\n    }\n`;\n\nconst HeadshotWrapper = styled.div`\n    z-index: 1;\n    align-self: flex-end;\n    flex-shrink: 0;\n\n    ${media.medium`\n        align-self: center;\n    `};\n`;\n\nconst Headshot = styled(Img)`\n    height: 460px;\n    width: 460px;\n\n    ${media.medium`\n        height: 250px;\n        width: 250px;\n        margin-bottom: 40px;\n    `};\n`;\n\nconst Intro = styled.div`\n    align-self: center;\n    margin-top: 20px;\n    margin-left: 80px;\n    z-index: 1;\n\n    ${media.medium`\n        margin-top: 0;\n        margin-left: 0;\n        text-align: center;\n        width: 600px;\n        max-width: 100%;\n    `};\n`;\n\nconst IntroDescription = styled.p`\n    ${textSize.largeThin};\n    ${textColor.body};\n    margin-bottom: 10px;\n\n    ${media.medium`\n        margin-bottom: 30px;\n    `};\n`;\n\nconst SocialMedia = styled.ul`\n    display: flex;\n    align-items: center;\n    margin: 0 -10px;\n    padding: 0;\n\n    ${media.medium`\n        justify-content: center;\n    `};\n\n    svg {\n        width: 35px;\n    }\n`;\n\nconst SocialMediaItem = styled.li`\n    margin: 0 2rem;\n    transform: scale(1.5);\n\n    &:before {\n        content: '';\n    }\n`;\n\nconst Section = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 80px 20px;\n`;\n\nconst RecentPosts = styled(Section)`\n    align-items: center;\n`;\n\nconst Projects = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    grid-gap: 20px;\n    justify-content: center;\n`;\n\nconst ProjectWrapper = styled.div`\n    flex-basis: 360px;\n    max-width: 100%;\n`;\n\nconst LinkedProject = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n    transition: all ease-in-out ${transitionDuration.slow};\n    display: block;\n\n    &:hover {\n        transform: scale(1.02);\n        color: inherit;\n    }\n`;\n\nconst Project = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    margin-bottom: 60px;\n`;\n\nconst ProjectTitle = styled.h3`\n    ${textColor.title};\n    ${textSize.large};\n    font-family: 'Poppins';\n    margin: 0 0 10px 0;\n`;\n\nconst ProjectImage = styled(Img)`\n    margin-bottom: 20px;\n    width: 240px;\n    max-width: 100%;\n`;\n\nconst ProjectDescription = styled.p`\n    ${textSize.normal};\n    text-align: center;\n    margin: 0;\n`;\n\nconst StyledTitle = styled(Title)`\n    margin-bottom: 100px;\n\n    ${media.medium`\n        margin-bottom: 60px;\n    `};\n`;\n\nconst SocialMediaGroup = (): JSX.Element => {\n    const { theme } = useTheme();\n    const iconFill =\n        theme === 'light' ? colors.textTitleLight : colors.textTitleDark;\n    const items = [\n        {\n            link: 'https://github.com/RUIYUANXia',\n            icon: <Github iconFill={iconFill} />\n        },\n        {\n            link: 'https://www.linkedin.com/in/ryxia2002/',\n            icon: <Linkedin iconFill={iconFill} />\n        }\n        // {\n        //     link:\n        //         'https://drive.google.com/file/d/1z4rsOkDIcYN-tlRhIo-7ye0-2ACRuPYA/view?usp=sharing',\n        //     icon: <Wechat iconFill={iconFill} />\n        // }\n    ];\n\n    return (\n        <SocialMedia>\n            {items.map(item => (\n                <SocialMediaItem key={item.link}>\n                    <Link to={item.link}>{item.icon}</Link>\n                </SocialMediaItem>\n            ))}\n        </SocialMedia>\n    );\n};\n\ntype HomePageProps = {\n    data: {\n        homeHeader: FluidImage;\n        homeHeadshot: FluidImage;\n        posts: {\n            edges: Post[];\n        };\n        projects: {\n            edges: ProjectType[];\n        };\n    };\n};\n\nconst WrappedProject = ({\n    projectPageLink,\n    children\n}: {\n    projectPageLink: string | undefined;\n    children: React.ReactNode;\n}) => {\n    if (projectPageLink) {\n        return (\n            <LinkedProject to={`${projectPageLink}`}>{children}</LinkedProject>\n        ) as any;\n    } else {\n        return children;\n    }\n};\n\nexport const Home = ({\n    data: {\n        homeHeader,\n        homeHeadshot,\n        posts: { edges: posts },\n        projects: { edges: projects }\n    }\n}: HomePageProps) => {\n    return (\n        <Layout>\n            <Header>\n                <HeaderWrapper>\n                    <HeadshotWrapper>\n                        <Headshot\n                            fluid={homeHeadshot.childImageSharp.fluid}\n                            alt=\"RY Xia's headshot\"\n                        />\n                    </HeadshotWrapper>\n                    <Intro>\n                        <IntroDescription>\n                            I am <strong>Ruiyuan Xia</strong> <br />a{' '}\n                            <strong>full stack software developer</strong>\n                            <br />a <strong>third year CS student</strong> at{' '}\n                            <strong>UBC</strong>\n                        </IntroDescription>\n                        <SocialMediaGroup />\n                    </Intro>\n                </HeaderWrapper>\n                <HeaderImage\n                    fluid={homeHeader.childImageSharp.fluid}\n                    alt={'Snowy mountains'}\n                    style={{ position: 'absolute' }}\n                />\n            </Header>\n            <Fade>\n                <Divider />\n            </Fade>\n            <StyledPageWrapper>\n                <Section>\n                    <Fade top>\n                        <StyledTitle as=\"h2\">Recent Projects</StyledTitle>\n                    </Fade>\n                    <Projects>\n                        {projects.map(({ node: project }) => (\n                            <ProjectWrapper key={project.fields.id}>\n                                <WrappedProject\n                                    projectPageLink={\n                                        project.frontmatter.detailsPageLink\n                                    }\n                                >\n                                    <Fade top>\n                                        <Project>\n                                            <ProjectImage\n                                                fluid={\n                                                    project.frontmatter.imageColor\n                                                        .childImageSharp.fluid\n                                                }\n                                            />\n                                            <ProjectTitle>\n                                                {project.frontmatter.title}\n                                            </ProjectTitle>\n                                            <ProjectDescription>\n                                                {project.frontmatter.description}\n                                            </ProjectDescription>\n                                        </Project>\n                                    </Fade>\n                                </WrappedProject>\n                            </ProjectWrapper>\n                        ))}\n                    </Projects>\n                    <Fade bottom>\n                        <Button to=\"/projects\">See all projects</Button>\n                    </Fade>\n                </Section>\n                <Fade>\n                    <Divider />\n                </Fade>\n                <RecentPosts>\n                    <Fade top>\n                        <StyledTitle as=\"h2\">Recent Posts</StyledTitle>\n                    </Fade>\n                    <BlogList posts={posts} />\n                    <Fade bottom>\n                        <Button to=\"/blog\">See all posts</Button>\n                    </Fade>\n                </RecentPosts>\n            </StyledPageWrapper>\n        </Layout>\n    );\n};\n\nexport default Home;\n\nexport const pageQuery = graphql`\n    query {\n        homeHeader: file(name: { eq: \"home-header\" }) {\n            childImageSharp {\n                fluid(maxWidth: 2000) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n        homeHeadshot: file(name: { eq: \"home-headshot\" }) {\n            childImageSharp {\n                fluid(maxHeight: 460) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n        posts: allMdx(\n            limit: 3\n            sort: { fields: frontmatter___date, order: DESC }\n            filter: { fields: { slug: { ne: null } } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        formattedDate: date(formatString: \"MMMM DD, YYYY\")\n                        dateTimeString: date(formatString: \"YYYY-MM-DD\")\n                        banner {\n                            childImageSharp {\n                                fluid(maxHeight: 340, quality: 100) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                        slug\n                        categories\n                    }\n                    timeToRead\n                }\n            }\n        }\n        projects: allMdx(\n            limit: 3\n            sort: { fields: frontmatter___date, order: DESC }\n            filter: { fields: { slug: { eq: null } } }\n        ) {\n            edges {\n                node {\n                    fields {\n                        id\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        subtitle\n                        description\n                        detailsPageLink\n                        imageColor {\n                            childImageSharp {\n                                fluid(maxWidth: 240) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import Img from 'gatsby-image';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport styled from 'styled-components';\n\nimport {\n    colors,\n    media,\n    textColor,\n    textSize,\n    transitionDuration\n} from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post as PostType } from '../types/Post';\nimport Link from './Link';\n\nconst Post = styled.section`\n    width: 100%;\n    height: 340px;\n    margin: 0 0 80px;\n    /* padding: 0 20px; */\n\n    ${media.large`\n        height: calc(100% - 60px);\n        margin: 0 0 60px;\n        flex-basis: 400px;\n        flex-grow: 1;\n        max-width: 500px;\n    `};\n`;\n\nconst PostLink = styled(Link)`\n    display: flex;\n    text-decoration: none;\n    height: 100%;\n    background-color: ${props =>\n        props.theme.color === 'light'\n            ? colors.backgroundSecondaryLight\n            : colors.backgroundSecondaryDark};\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    transition: all ease-in-out ${transitionDuration.slow};\n\n    ${media.large`\n        flex-direction: column-reverse;\n    `};\n\n    &:hover {\n        transform: scale(1.02) !important;\n        box-shadow: 0 4px 16px 8px rgba(0, 0, 0, 0.1);\n    }\n`;\n\nconst PostDescription = styled.div`\n    ${textColor.body};\n    padding: 25px;\n    width: 50%;\n    height: 100%;\n\n    ${media.large`\n        padding-top: 15px;\n        width: 100%;\n    `};\n`;\n\nconst PostTitle = styled.h3`\n    ${textColor.title};\n    font-weight: 400;\n    line-height: 1.5;\n    font-size: 2.8rem;\n    margin-top: 0;\n    margin-bottom: 5px;\n\n    ${media.medium`\n        font-size: 2.4rem;\n    `};\n`;\n\nconst MetaInfo = styled.div`\n    ${textSize.small};\n`;\n\nconst PostDate = styled.time``;\n\nconst MetaInfoSeparator = styled.span`\n    display: inline-block;\n    margin: 0 8px;\n`;\n\nconst TimeToRead = styled.span``;\n\nconst Clock = styled.span`\n    display: inline-block;\n    margin-right: 5px;\n`;\n\nconst PostExcerpt = styled.p`\n    ${textSize.normal};\n`;\n\nconst PostImage = styled(Img)`\n    flex-shrink: 0;\n    width: 50%;\n\n    ${media.large`\n        height: 250px;\n        width: 100%;\n    `};\n\n    ${media.small`\n        height: 200px;\n        width: 100%;\n    `};\n`;\n\ntype BlogCardProps = {\n    post: PostType['node'];\n};\n\nconst BlogCard = ({ post }: BlogCardProps) => {\n    return (\n        <Fade bottom key={post.id}>\n            <Post>\n                <PostLink to={post.frontmatter.slug}>\n                    <PostDescription>\n                        <PostTitle>{post.frontmatter.title}</PostTitle>\n                        <MetaInfo>\n                            <PostDate dateTime={post.frontmatter.dateTimeString}>\n                                {post.frontmatter.formattedDate}\n                            </PostDate>\n                            <MetaInfoSeparator>•</MetaInfoSeparator>\n                            <TimeToRead>\n                                <Clock>🕙</Clock>\n                                {post.timeToRead} min read\n                            </TimeToRead>\n                        </MetaInfo>\n                        <PostExcerpt>{post.frontmatter.description}</PostExcerpt>\n                    </PostDescription>\n                    {post.frontmatter.banner && (\n                        <PostImage\n                            fluid={post.frontmatter.banner.childImageSharp.fluid}\n                        />\n                    )}\n                </PostLink>\n            </Post>\n        </Fade>\n    );\n};\n\nexport default BlogCard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { media } from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\nimport BlogCard from './BlogCard';\n\nconst BlogList = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* margin-left: -20px;\n    margin-right: -20px; */\n\n    ${media.large`\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n    `};\n`;\n\ntype BlogListComponentProps = {\n    posts: (Post | undefined)[];\n};\n\nconst BlogListComponent = ({ posts }: BlogListComponentProps) => {\n    return (\n        <BlogList>\n            {posts.map(post => {\n                if (post !== undefined) {\n                    return <BlogCard key={post.node.id} post={post.node} />;\n                }\n            })}\n        </BlogList>\n    );\n};\n\nexport default BlogListComponent;\n"],"sourceRoot":""}