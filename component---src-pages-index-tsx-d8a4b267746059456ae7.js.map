{"version":3,"sources":["webpack:///./src/components/icons/Github.tsx","webpack:///./src/components/icons/Linkedin.tsx","webpack:///./src/pages/index.tsx"],"names":["Github","_ref","_ref$iconFill","iconFill","colors","textTitleLight","React","createElement","xmlns","width","height","x","y","viewBox","d","fill","Linkedin","Header","styled","div","_templateObject","_taggedTemplateLiteralLoose","media","medium","_templateObject2","StyledPageWrapper","PageWrapper","_templateObject3","HeaderWrapper","_templateObject4","_templateObject5","HeaderImage","Img","_templateObject6","_templateObject7","props","theme","color","backgroundLight","backgroundDark","HeadshotWrapper","_templateObject8","_templateObject9","Headshot","_templateObject10","_templateObject11","Intro","_templateObject12","_templateObject13","IntroDescription","p","_templateObject14","textSize","largeThin","textColor","body","_templateObject15","SocialMedia","ul","_templateObject16","_templateObject17","SocialMediaItem","li","_templateObject18","Section","_templateObject19","Projects","_templateObject20","_templateObject21","ProjectWrapper","_templateObject22","LinkedProject","Link","_templateObject23","transitionDuration","slow","Project","_templateObject24","ProjectTitle","h3","_templateObject25","title","large","ProjectImage","_templateObject26","ProjectDescription","_templateObject27","normal","StyledTitle","Title","_templateObject28","_templateObject29","SocialMediaGroup","useTheme","textTitleDark","items","link","icon","map","item","key","to","WrappedProject","projectPageLink","children","Home","_ref2","_ref2$data","data","homeHeader","homeHeadshot","projects","posts","edges","Layout","fluid","childImageSharp","alt","style","position","Fade","Divider","top","as","_ref3","project","node","fields","id","frontmatter","detailsPageLink","imageColor","description","bottom","Button"],"mappings":"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","file":"component---src-pages-index-tsx-d8a4b267746059456ae7.js","sourcesContent":["import React from 'react';\n\nimport { colors } from '../../styles/common';\n\ntype GithubProps = {\n    iconFill?: string;\n};\n\nconst Github = ({ iconFill = colors.textTitleLight }: GithubProps) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\"\n            height=\"50\"\n            x=\"0\"\n            y=\"0\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                d=\"M17.791 46.836A1.999 1.999 0 0019 45v-5.4c0-.197.016-.402.041-.61A.611.611 0 0119 39h-3.6c-1.5 0-2.8-.6-3.4-1.8-.7-1.3-1-3.5-2.8-4.7-.3-.2-.1-.5.5-.5.6.1 1.9.9 2.7 2 .9 1.1 1.8 2 3.4 2 2.487 0 3.82-.125 4.622-.555C21.356 34.056 22.649 33 24 33v-.025c-5.668-.182-9.289-2.066-10.975-4.975-3.665.042-6.856.405-8.677.707a21.537 21.537 0 01-.151-.987c1.797-.296 4.843-.647 8.345-.714a8.162 8.162 0 01-.291-.849c-3.511-.178-6.541-.039-8.187.097-.02-.332-.047-.663-.051-.999 1.649-.135 4.597-.27 8.018-.111a9.832 9.832 0 01-.13-1.543c0-1.7.6-3.5 1.7-5-.5-1.7-1.2-5.3.2-6.6 2.7 0 4.6 1.3 5.5 2.1C21 13.4 22.9 13 25 13s4 .4 5.6 1.1c.9-.8 2.8-2.1 5.5-2.1 1.5 1.4.7 5 .2 6.6 1.1 1.5 1.7 3.2 1.6 5 0 .484-.045.951-.11 1.409 3.499-.172 6.527-.034 8.204.102-.002.337-.033.666-.051.999-1.671-.138-4.775-.28-8.359-.089a8.272 8.272 0 01-.325.98c3.546.046 6.665.389 8.548.689-.043.332-.093.661-.151.987-1.912-.306-5.171-.664-8.879-.682-1.665 2.878-5.22 4.755-10.777 4.974V33c2.6 0 5 3.9 5 6.6V45c0 .823.498 1.53 1.209 1.836C41.37 43.804 48 35.164 48 25 48 12.318 37.683 2 25 2S2 12.318 2 25c0 10.164 6.63 18.804 15.791 21.836z\"\n                fill={iconFill}\n            ></path>\n        </svg>\n    );\n};\n\nexport default Github;\n","import React from 'react';\n\nimport { colors } from '../../styles/common';\n\ntype LinkedinProps = {\n    iconFill?: string;\n};\n\nconst Linkedin = ({ iconFill = colors.textTitleLight }: LinkedinProps) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"50\"\n            height=\"50\"\n            x=\"0\"\n            y=\"0\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                d=\"M8 3.01c-3.47 0-5.99 2.08-5.99 4.94 0 2.87 2.58 5.04 5.99 5.04 3.47 0 5.99-2.12 5.99-5.1-.16-2.87-2.63-4.88-5.99-4.88zM3 15c-.55 0-1 .45-1 1v29c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V16c0-.55-.45-1-1-1H3zm15 0c-.55 0-1 .45-1 1v29c0 .55.45 1 1 1h9a1 1 0 001-1V29.5c0-2.37 1.82-4.3 4.14-4.48.12-.02.24-.02.36-.02s.24 0 .36.02c2.32.18 4.14 2.11 4.14 4.48V45a1 1 0 001 1h9c.55 0 1-.45 1-1V28c0-6.47-3.47-13-11.21-13-3.52 0-6.18 1.36-7.79 2.49V16c0-.55-.45-1-1-1H18z\"\n                fill={iconFill}\n            ></path>\n        </svg>\n    );\n};\n\nexport default Linkedin;\n","/* eslint-disable max-lines */\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\n\nimport { Button, Divider, PageWrapper } from '../components/Common';\nimport Github from '../components/icons/Github';\nimport Linkedin from '../components/icons/Linkedin';\n// import Wechat from '../components/icons/Wechat';\nimport Layout from '../components/Layout';\nimport Link from '../components/Link';\nimport { Title } from '../components/Typography';\nimport styled from '../lib/styled-components';\nimport {\n    colors,\n    media,\n    textColor,\n    textSize,\n    transitionDuration\n} from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { FluidImage } from '../types/Image';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\n// eslint-disable-next-line no-unused-vars\nimport { Project as ProjectType } from '../types/Project';\nimport { useTheme } from '../utils/context';\n\nconst Header = styled.div`\n    position: relative;\n    height: 560px;\n    margin-top: -60px; // height of the menu\n    display: flex;\n    padding: 0 20px;\n\n    ${media.medium`\n        height: unset;\n        margin-top: -140px; // height of the menu\n        padding-top: calc(140px + 20px);\n        padding-bottom: 80px;\n    `};\n`;\n\nconst StyledPageWrapper = styled(PageWrapper)`\n    padding: 40px 0;\n`;\n\nconst HeaderWrapper = styled(PageWrapper)`\n    display: flex;\n    height: 100%;\n\n    ${media.medium`\n        flex-direction: column;\n    `};\n`;\n\nconst HeaderImage = styled(Img)`\n    left: 0;\n    top: 0;\n    width: 100vw;\n    height: 560px;\n\n    ${media.medium`\n        height: 100%;\n    `};\n\n    &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-color: ${props =>\n            props.theme.color === 'light'\n                ? colors.backgroundLight\n                : colors.backgroundDark};\n        opacity: 1;\n    }\n`;\n\nconst HeadshotWrapper = styled.div`\n    z-index: 1;\n    align-self: flex-end;\n    flex-shrink: 0;\n\n    ${media.medium`\n        align-self: center;\n    `};\n`;\n\nconst Headshot = styled(Img)`\n    height: 460px;\n    width: 460px;\n\n    ${media.medium`\n        height: 250px;\n        width: 250px;\n        margin-bottom: 40px;\n    `};\n`;\n\nconst Intro = styled.div`\n    align-self: center;\n    margin-top: 20px;\n    margin-left: 80px;\n    z-index: 1;\n\n    ${media.medium`\n        margin-top: 0;\n        margin-left: 0;\n        text-align: center;\n        width: 600px;\n        max-width: 100%;\n    `};\n`;\n\nconst IntroDescription = styled.p`\n    ${textSize.largeThin};\n    ${textColor.body};\n    margin-bottom: 10px;\n\n    ${media.medium`\n        margin-bottom: 30px;\n    `};\n`;\n\nconst SocialMedia = styled.ul`\n    display: flex;\n    align-items: center;\n    margin: 0 -10px;\n    padding: 0;\n\n    ${media.medium`\n        justify-content: center;\n    `};\n\n    svg {\n        width: 35px;\n    }\n`;\n\nconst SocialMediaItem = styled.li`\n    margin: 0 2rem;\n    transform: scale(1.5);\n\n    &:before {\n        content: '';\n    }\n`;\n\nconst Section = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 80px 20px;\n`;\n\nconst RecentPosts = styled(Section)`\n    align-items: center;\n`;\n\nconst Projects = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    grid-gap: 20px;\n    justify-content: center;\n`;\n\nconst ProjectWrapper = styled.div`\n    flex-basis: 360px;\n    max-width: 100%;\n`;\n\nconst LinkedProject = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n    transition: all ease-in-out ${transitionDuration.slow};\n    display: block;\n\n    &:hover {\n        transform: scale(1.02);\n        color: inherit;\n    }\n`;\n\nconst Project = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    margin-bottom: 60px;\n`;\n\nconst ProjectTitle = styled.h3`\n    ${textColor.title};\n    ${textSize.large};\n    font-family: 'Poppins';\n    margin: 0 0 10px 0;\n`;\n\nconst ProjectImage = styled(Img)`\n    margin-bottom: 20px;\n    width: 240px;\n    max-width: 100%;\n`;\n\nconst ProjectDescription = styled.p`\n    ${textSize.normal};\n    text-align: center;\n    margin: 0;\n`;\n\nconst StyledTitle = styled(Title)`\n    margin-bottom: 100px;\n\n    ${media.medium`\n        margin-bottom: 60px;\n    `};\n`;\n\nconst SocialMediaGroup = (): JSX.Element => {\n    const { theme } = useTheme();\n    const iconFill =\n        theme === 'light' ? colors.textTitleLight : colors.textTitleDark;\n    const items = [\n        {\n            link: 'https://github.com/RUIYUANXia',\n            icon: <Github iconFill={iconFill} />\n        },\n        {\n            link: 'https://www.linkedin.com/in/ruiyuan-xia-13921184152xry/',\n            icon: <Linkedin iconFill={iconFill} />\n        }\n        // {\n        //     link:\n        //         'https://drive.google.com/file/d/1z4rsOkDIcYN-tlRhIo-7ye0-2ACRuPYA/view?usp=sharing',\n        //     icon: <Wechat iconFill={iconFill} />\n        // }\n    ];\n\n    return (\n        <SocialMedia>\n            {items.map(item => (\n                <SocialMediaItem key={item.link}>\n                    <Link to={item.link}>{item.icon}</Link>\n                </SocialMediaItem>\n            ))}\n        </SocialMedia>\n    );\n};\n\ntype HomePageProps = {\n    data: {\n        homeHeader: FluidImage;\n        homeHeadshot: FluidImage;\n        posts: {\n            edges: Post[];\n        };\n        projects: {\n            edges: ProjectType[];\n        };\n    };\n};\n\nconst WrappedProject = ({\n    projectPageLink,\n    children\n}: {\n    projectPageLink: string | undefined;\n    children: React.ReactNode;\n}) => {\n    if (projectPageLink) {\n        return (\n            <LinkedProject to={`${projectPageLink}`}>{children}</LinkedProject>\n        ) as any;\n    } else {\n        return children;\n    }\n};\n\nexport const Home = ({\n    data: {\n        homeHeader,\n        homeHeadshot,\n        posts: { edges: posts },\n        projects: { edges: projects }\n    }\n}: HomePageProps) => {\n    return (\n        <Layout>\n            <Header>\n                <HeaderWrapper>\n                    <HeadshotWrapper>\n                        <Headshot\n                            fluid={homeHeadshot.childImageSharp.fluid}\n                            alt=\"RY Xia's headshot\"\n                        />\n                    </HeadshotWrapper>\n                    <Intro>\n                        <IntroDescription>\n                            I am <strong>Ruiyuan Xia</strong> <br />a{' '}\n                            <strong>full stack software developer</strong>\n                            <br />a <strong>third year CS student</strong> at{' '}\n                            <strong>UBC</strong>\n                        </IntroDescription>\n                        <SocialMediaGroup />\n                    </Intro>\n                </HeaderWrapper>\n                <HeaderImage\n                    fluid={homeHeader.childImageSharp.fluid}\n                    alt={'Snowy mountains'}\n                    style={{ position: 'absolute' }}\n                />\n            </Header>\n            <Fade>\n                <Divider />\n            </Fade>\n            <StyledPageWrapper>\n                <Section>\n                    <Fade top>\n                        <StyledTitle as=\"h2\">Recent Projects</StyledTitle>\n                    </Fade>\n                    <Projects>\n                        {projects.map(({ node: project }) => (\n                            <ProjectWrapper key={project.fields.id}>\n                                <WrappedProject\n                                    projectPageLink={\n                                        project.frontmatter.detailsPageLink\n                                    }\n                                >\n                                    <Fade top>\n                                        <Project>\n                                            <ProjectImage\n                                                fluid={\n                                                    project.frontmatter.imageColor\n                                                        .childImageSharp.fluid\n                                                }\n                                            />\n                                            <ProjectTitle>\n                                                {project.frontmatter.title}\n                                            </ProjectTitle>\n                                            <ProjectDescription>\n                                                {project.frontmatter.description}\n                                            </ProjectDescription>\n                                        </Project>\n                                    </Fade>\n                                </WrappedProject>\n                            </ProjectWrapper>\n                        ))}\n                    </Projects>\n                    <Fade bottom>\n                        <Button to=\"/projects\">See all projects</Button>\n                    </Fade>\n                </Section>\n            </StyledPageWrapper>\n        </Layout>\n    );\n};\n\nexport default Home;\n\nexport const pageQuery = graphql`\n    query {\n        homeHeader: file(name: { eq: \"home-header\" }) {\n            childImageSharp {\n                fluid(maxWidth: 2000) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n        homeHeadshot: file(name: { eq: \"home-headshot\" }) {\n            childImageSharp {\n                fluid(maxHeight: 460) {\n                    ...GatsbyImageSharpFluid\n                }\n            }\n        }\n        posts: allMdx(\n            limit: 3\n            sort: { fields: frontmatter___date, order: DESC }\n            filter: { fields: { slug: { ne: null } } }\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        formattedDate: date(formatString: \"MMMM DD, YYYY\")\n                        dateTimeString: date(formatString: \"YYYY-MM-DD\")\n                        banner {\n                            childImageSharp {\n                                fluid(maxHeight: 340, quality: 100) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                        slug\n                        categories\n                    }\n                    timeToRead\n                }\n            }\n        }\n        projects: allMdx(\n            limit: 3\n            sort: { fields: frontmatter___date, order: DESC }\n            filter: { fields: { slug: { eq: null } } }\n        ) {\n            edges {\n                node {\n                    fields {\n                        id\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        subtitle\n                        description\n                        detailsPageLink\n                        imageColor {\n                            childImageSharp {\n                                fluid(maxWidth: 240) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}