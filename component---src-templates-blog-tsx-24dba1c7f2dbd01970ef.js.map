{"version":3,"sources":["webpack:///./src/templates/blog.tsx","webpack:///./src/components/BlogCard.tsx","webpack:///./src/components/BlogList.tsx"],"names":["StyledTitle","styled","Title","_templateObject","_taggedTemplateLiteralLoose","media","medium","_templateObject2","Pagination","ul","_templateObject3","PaginationItem","li","_templateObject4","props","position","PaginationLink","Link","_templateObject5","Blog","_ref","allMdx","data","pagination","pageContext","page","nextPagePath","previousPagePath","posts","map","id","edges","find","post","node","React","createElement","Layout","title","PaddedPageWrapper","Fade","top","BlogList","to","Post","section","withConfig","displayName","componentId","large","PostLink","theme","color","colors","backgroundSecondaryLight","backgroundSecondaryDark","transitionDuration","slow","PostDescription","div","textColor","body","PostTitle","h3","MetaInfo","textSize","small","PostDate","time","MetaInfoSeparator","span","TimeToRead","Clock","PostExcerpt","p","normal","PostImage","Img","_templateObject6","BlogCard","bottom","key","frontmatter","slug","dateTime","dateTimeString","formattedDate","timeToRead","description","banner","fluid","childImageSharp","BlogListComponent","undefined"],"mappings":"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","file":"component---src-templates-blog-tsx-24dba1c7f2dbd01970ef.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\n\nimport BlogList from '../components/BlogList';\nimport { PaddedPageWrapper } from '../components/Common';\nimport Layout from '../components/Layout';\nimport Link from '../components/Link';\nimport { Title } from '../components/Typography';\nimport styled from '../lib/styled-components';\nimport { media } from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\n\nconst StyledTitle = styled(Title)`\n    margin-bottom: 100px;\n\n    ${media.medium`\n        margin-bottom: 60px;\n    `};\n`;\n\nconst Pagination = styled.ul`\n    display: flex;\n    padding: 0;\n`;\n\nconst PaginationItem = styled.li<{ position: string }>`\n    margin-left: ${props => (props.position === 'right' ? 'auto' : 0)};\n\n    &:before {\n        display: none;\n    }\n`;\n\nconst PaginationLink = styled(Link)``;\n\ntype BlogProps = {\n    data: {\n        allMdx: {\n            edges: Post[];\n        };\n    };\n    pageContext: {\n        pagination: {\n            page: string[];\n            nextPagePath: string;\n            previousPagePath: string;\n        };\n    };\n};\n\nconst Blog = ({ data: { allMdx }, pageContext: { pagination } }: BlogProps) => {\n    const { page, nextPagePath, previousPagePath } = pagination;\n\n    const posts = page.map(id => allMdx.edges.find(post => post.node.id === id));\n\n    return (\n        <Layout title=\"RY Xia | Blog\">\n            <PaddedPageWrapper>\n                <Fade top>\n                    <StyledTitle>Blog</StyledTitle>\n                </Fade>\n                <BlogList posts={posts} />\n                <Pagination>\n                    {nextPagePath && (\n                        <PaginationItem position=\"left\">\n                            <PaginationLink to={nextPagePath}>\n                                Newer Posts\n                            </PaginationLink>\n                        </PaginationItem>\n                    )}\n\n                    {previousPagePath && (\n                        <PaginationItem position=\"right\">\n                            <PaginationLink to={previousPagePath}>\n                                Older Posts\n                            </PaginationLink>\n                        </PaginationItem>\n                    )}\n                </Pagination>\n            </PaddedPageWrapper>\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query {\n        allMdx {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        formattedDate: date(formatString: \"MMMM DD, YYYY\")\n                        dateTimeString: date(formatString: \"YYYY-MM-DD\")\n                        banner {\n                            childImageSharp {\n                                fluid(maxHeight: 340, quality: 100) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                        slug\n                        categories\n                    }\n                    timeToRead\n                }\n            }\n        }\n    }\n`;\n","import Img from 'gatsby-image';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport styled from 'styled-components';\n\nimport {\n    colors,\n    media,\n    textColor,\n    textSize,\n    transitionDuration\n} from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post as PostType } from '../types/Post';\nimport Link from './Link';\n\nconst Post = styled.section`\n    width: 100%;\n    height: 340px;\n    margin: 0 0 80px;\n    /* padding: 0 20px; */\n\n    ${media.large`\n        height: calc(100% - 60px);\n        margin: 0 0 60px;\n        flex-basis: 400px;\n        flex-grow: 1;\n        max-width: 500px;\n    `};\n`;\n\nconst PostLink = styled(Link)`\n    display: flex;\n    text-decoration: none;\n    height: 100%;\n    background-color: ${props =>\n        props.theme.color === 'light'\n            ? colors.backgroundSecondaryLight\n            : colors.backgroundSecondaryDark};\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    transition: all ease-in-out ${transitionDuration.slow};\n\n    ${media.large`\n        flex-direction: column-reverse;\n    `};\n\n    &:hover {\n        transform: scale(1.02) !important;\n        box-shadow: 0 4px 16px 8px rgba(0, 0, 0, 0.1);\n    }\n`;\n\nconst PostDescription = styled.div`\n    ${textColor.body};\n    padding: 25px;\n    width: 50%;\n    height: 100%;\n\n    ${media.large`\n        padding-top: 15px;\n        width: 100%;\n    `};\n`;\n\nconst PostTitle = styled.h3`\n    ${textColor.title};\n    font-weight: 400;\n    line-height: 1.5;\n    font-size: 2.8rem;\n    margin-top: 0;\n    margin-bottom: 5px;\n\n    ${media.medium`\n        font-size: 2.4rem;\n    `};\n`;\n\nconst MetaInfo = styled.div`\n    ${textSize.small};\n`;\n\nconst PostDate = styled.time``;\n\nconst MetaInfoSeparator = styled.span`\n    display: inline-block;\n    margin: 0 8px;\n`;\n\nconst TimeToRead = styled.span``;\n\nconst Clock = styled.span`\n    display: inline-block;\n    margin-right: 5px;\n`;\n\nconst PostExcerpt = styled.p`\n    ${textSize.normal};\n`;\n\nconst PostImage = styled(Img)`\n    flex-shrink: 0;\n    width: 50%;\n\n    ${media.large`\n        height: 250px;\n        width: 100%;\n    `};\n\n    ${media.small`\n        height: 200px;\n        width: 100%;\n    `};\n`;\n\ntype BlogCardProps = {\n    post: PostType['node'];\n};\n\nconst BlogCard = ({ post }: BlogCardProps) => {\n    return (\n        <Fade bottom key={post.id}>\n            <Post>\n                <PostLink to={post.frontmatter.slug}>\n                    <PostDescription>\n                        <PostTitle>{post.frontmatter.title}</PostTitle>\n                        <MetaInfo>\n                            <PostDate dateTime={post.frontmatter.dateTimeString}>\n                                {post.frontmatter.formattedDate}\n                            </PostDate>\n                            <MetaInfoSeparator>•</MetaInfoSeparator>\n                            <TimeToRead>\n                                <Clock>🕙</Clock>\n                                {post.timeToRead} min read\n                            </TimeToRead>\n                        </MetaInfo>\n                        <PostExcerpt>{post.frontmatter.description}</PostExcerpt>\n                    </PostDescription>\n                    {post.frontmatter.banner && (\n                        <PostImage\n                            fluid={post.frontmatter.banner.childImageSharp.fluid}\n                        />\n                    )}\n                </PostLink>\n            </Post>\n        </Fade>\n    );\n};\n\nexport default BlogCard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { media } from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\nimport BlogCard from './BlogCard';\n\nconst BlogList = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* margin-left: -20px;\n    margin-right: -20px; */\n\n    ${media.large`\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n    `};\n`;\n\ntype BlogListComponentProps = {\n    posts: (Post | undefined)[];\n};\n\nconst BlogListComponent = ({ posts }: BlogListComponentProps) => {\n    return (\n        <BlogList>\n            {posts.map(post => {\n                if (post !== undefined) {\n                    return <BlogCard key={post.node.id} post={post.node} />;\n                }\n            })}\n        </BlogList>\n    );\n};\n\nexport default BlogListComponent;\n"],"sourceRoot":""}