{"version":3,"sources":["webpack:///./src/components/BlogCard.tsx","webpack:///./src/components/BlogList.tsx","webpack:///./src/templates/blog.tsx"],"names":["Post","styled","section","withConfig","displayName","componentId","media","large","_templateObject","_taggedTemplateLiteralLoose","PostLink","Link","props","theme","color","colors","backgroundSecondaryLight","backgroundSecondaryDark","transitionDuration","slow","_templateObject2","PostDescription","div","textColor","body","_templateObject3","PostTitle","h3","title","medium","_templateObject4","MetaInfo","textSize","small","PostDate","time","MetaInfoSeparator","span","TimeToRead","Clock","PostExcerpt","p","normal","PostImage","Img","_templateObject5","_templateObject6","BlogCard","_ref","post","React","createElement","Fade","bottom","key","id","to","frontmatter","slug","dateTime","dateTimeString","formattedDate","timeToRead","description","banner","fluid","childImageSharp","BlogList","BlogListComponent","posts","map","undefined","node","StyledTitle","Title","Pagination","ul","PaginationItem","li","position","PaginationLink","Blog","allMdx","data","pagination","pageContext","page","nextPagePath","previousPagePath","edges","find","Layout","PaddedPageWrapper","top"],"mappings":"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","file":"component---src-templates-blog-tsx-73bd5bdffdfc0b535cfb.js","sourcesContent":["import Img from 'gatsby-image';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport styled from 'styled-components';\n\nimport {\n    colors,\n    media,\n    textColor,\n    textSize,\n    transitionDuration\n} from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post as PostType } from '../types/Post';\nimport Link from './Link';\n\nconst Post = styled.section`\n    width: 100%;\n    height: 340px;\n    margin: 0 0 80px;\n    /* padding: 0 20px; */\n\n    ${media.large`\n        height: calc(100% - 60px);\n        margin: 0 0 60px;\n        flex-basis: 400px;\n        flex-grow: 1;\n        max-width: 500px;\n    `};\n`;\n\nconst PostLink = styled(Link)`\n    display: flex;\n    text-decoration: none;\n    height: 100%;\n    background-color: ${props =>\n        props.theme.color === 'light'\n            ? colors.backgroundSecondaryLight\n            : colors.backgroundSecondaryDark};\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    transition: all ease-in-out ${transitionDuration.slow};\n\n    ${media.large`\n        flex-direction: column-reverse;\n    `};\n\n    &:hover {\n        transform: scale(1.02) !important;\n        box-shadow: 0 4px 16px 8px rgba(0, 0, 0, 0.1);\n    }\n`;\n\nconst PostDescription = styled.div`\n    ${textColor.body};\n    padding: 25px;\n    width: 50%;\n    height: 100%;\n\n    ${media.large`\n        padding-top: 15px;\n        width: 100%;\n    `};\n`;\n\nconst PostTitle = styled.h3`\n    ${textColor.title};\n    font-weight: 400;\n    line-height: 1.5;\n    font-size: 2.8rem;\n    margin-top: 0;\n    margin-bottom: 5px;\n\n    ${media.medium`\n        font-size: 2.4rem;\n    `};\n`;\n\nconst MetaInfo = styled.div`\n    ${textSize.small};\n`;\n\nconst PostDate = styled.time``;\n\nconst MetaInfoSeparator = styled.span`\n    display: inline-block;\n    margin: 0 8px;\n`;\n\nconst TimeToRead = styled.span``;\n\nconst Clock = styled.span`\n    display: inline-block;\n    margin-right: 5px;\n`;\n\nconst PostExcerpt = styled.p`\n    ${textSize.normal};\n`;\n\nconst PostImage = styled(Img)`\n    flex-shrink: 0;\n    width: 50%;\n\n    ${media.large`\n        height: 250px;\n        width: 100%;\n    `};\n\n    ${media.small`\n        height: 200px;\n        width: 100%;\n    `};\n`;\n\ntype BlogCardProps = {\n    post: PostType['node'];\n};\n\nconst BlogCard = ({ post }: BlogCardProps) => {\n    return (\n        <Fade bottom key={post.id}>\n            <Post>\n                <PostLink to={post.frontmatter.slug}>\n                    <PostDescription>\n                        <PostTitle>{post.frontmatter.title}</PostTitle>\n                        <MetaInfo>\n                            <PostDate dateTime={post.frontmatter.dateTimeString}>\n                                {post.frontmatter.formattedDate}\n                            </PostDate>\n                            <MetaInfoSeparator>â€¢</MetaInfoSeparator>\n                            <TimeToRead>\n                                <Clock>ðŸ•™</Clock>\n                                {post.timeToRead} min read\n                            </TimeToRead>\n                        </MetaInfo>\n                        <PostExcerpt>{post.frontmatter.description}</PostExcerpt>\n                    </PostDescription>\n                    {post.frontmatter.banner && (\n                        <PostImage\n                            fluid={post.frontmatter.banner.childImageSharp.fluid}\n                        />\n                    )}\n                </PostLink>\n            </Post>\n        </Fade>\n    );\n};\n\nexport default BlogCard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { media } from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\nimport BlogCard from './BlogCard';\n\nconst BlogList = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* margin-left: -20px;\n    margin-right: -20px; */\n\n    ${media.large`\n        flex-direction: row;\n        flex-wrap: wrap;\n        justify-content: center;\n    `};\n`;\n\ntype BlogListComponentProps = {\n    posts: (Post | undefined)[];\n};\n\nconst BlogListComponent = ({ posts }: BlogListComponentProps) => {\n    return (\n        <BlogList>\n            {posts.map(post => {\n                if (post !== undefined) {\n                    return <BlogCard key={post.node.id} post={post.node} />;\n                }\n            })}\n        </BlogList>\n    );\n};\n\nexport default BlogListComponent;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Fade from 'react-reveal/Fade';\n\nimport BlogList from '../components/BlogList';\nimport { PaddedPageWrapper } from '../components/Common';\nimport Layout from '../components/Layout';\nimport Link from '../components/Link';\nimport { Title } from '../components/Typography';\nimport styled from '../lib/styled-components';\nimport { media } from '../styles/common';\n// eslint-disable-next-line no-unused-vars\nimport { Post } from '../types/Post';\n\nconst StyledTitle = styled(Title)`\n    margin-bottom: 100px;\n\n    ${media.medium`\n        margin-bottom: 60px;\n    `};\n`;\n\nconst Pagination = styled.ul`\n    display: flex;\n    padding: 0;\n`;\n\nconst PaginationItem = styled.li<{ position: string }>`\n    margin-left: ${props => (props.position === 'right' ? 'auto' : 0)};\n\n    &:before {\n        display: none;\n    }\n`;\n\nconst PaginationLink = styled(Link)``;\n\ntype BlogProps = {\n    data: {\n        allMdx: {\n            edges: Post[];\n        };\n    };\n    pageContext: {\n        pagination: {\n            page: string[];\n            nextPagePath: string;\n            previousPagePath: string;\n        };\n    };\n};\n\nconst Blog = ({ data: { allMdx }, pageContext: { pagination } }: BlogProps) => {\n    const { page, nextPagePath, previousPagePath } = pagination;\n\n    const posts = page.map(id => allMdx.edges.find(post => post.node.id === id));\n\n    return (\n        <Layout title=\"RY Xia | Blog\">\n            <PaddedPageWrapper>\n                <Fade top>\n                    <StyledTitle>Blog</StyledTitle>\n                </Fade>\n                <BlogList posts={posts} />\n                <Pagination>\n                    {nextPagePath && (\n                        <PaginationItem position=\"left\">\n                            <PaginationLink to={nextPagePath}>\n                                Newer Posts\n                            </PaginationLink>\n                        </PaginationItem>\n                    )}\n\n                    {previousPagePath && (\n                        <PaginationItem position=\"right\">\n                            <PaginationLink to={previousPagePath}>\n                                Older Posts\n                            </PaginationLink>\n                        </PaginationItem>\n                    )}\n                </Pagination>\n            </PaddedPageWrapper>\n        </Layout>\n    );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n    query {\n        allMdx {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        description\n                        formattedDate: date(formatString: \"MMMM DD, YYYY\")\n                        dateTimeString: date(formatString: \"YYYY-MM-DD\")\n                        banner {\n                            childImageSharp {\n                                fluid(maxHeight: 340, quality: 100) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                        slug\n                        categories\n                    }\n                    timeToRead\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}